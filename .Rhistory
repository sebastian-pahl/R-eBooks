?get_googlemap
library("getmap")
library("ggmap")
?get_googlemap
?register_google
?ggmap
?get_map
register_google(key = "AIzaSyB2h501flyY6V-4fAhFhRiC2qFIXP58xBM")
StravaMap <- get_googlemap(center = c(7.95, 48.02), zoom =11)
setwd("/Users/sebastianpahl/Git/Strava-project")
strava_table_creator <- function(data.gpx) {
data_table <- read.csv(data.gpx, strip.white = TRUE, skip=1,col.names = c("column1"))
data_character <- as.character(data_table[,1])
find_time <- grep("<time>", data_character, value=TRUE)
activity_date <- strptime(find_time, "<time>%Y-%m-%dT%H:%M:%SZ</time>")
hours <- difftime(activity_date[-1], activity_date[1])/60/60
find_elevation <- grep("<ele>", data_character, value=TRUE)
elevation <- as.numeric(gsub("</?ele>","",find_elevation))
find_coordinates <- grep("<trkpt lat", data_character, value=TRUE)
latitude <- as.numeric(substr(find_coordinates,12,21))
longitude <- as.numeric(substr(find_coordinates,27,35))
#extensions
data_string <- toString(data_table)
extensions <- c(str_split(data_string, "/extensions", simplify=TRUE))
power_function <- function(x) {
extract_power <- str_extract(x, "<power>.*</power>")
power <- str_extract(extract_power, "\\d+")
power
}
power <- head(na.locf(as.numeric(lapply(extensions, power_function))),-1)
pulse_function <- function(x) {
extract_pulse <- str_extract(x, "<gpxtpx:hr>.*</gpxtpx:hr>")
pulse <- str_extract(extract_pulse, "\\d+")
pulse
}
pulse <- head(na.locf(as.numeric(lapply(extensions, pulse_function))),-1)
cadence_function <- function(x) {
extract_cadence <- str_extract(x, "<gpxtpx:cad>.*</gpxtpx:cad>")
cadence <- str_extract(extract_cadence, "\\d+")
cadence
}
cadence <- head(na.locf(as.numeric(lapply(extensions, cadence_function))),-1)
temperature_function <- function(x) {
extract_temperature <- str_extract(x, "<gpxtpx:atemp>.*</gpxtpx:atemp>")
temperature <- str_extract(extract_temperature, "\\d+")
temperature
}
temperature <- head(na.locf(as.numeric(lapply(extensions, temperature_function))),-1)
data.frame(hours, elevation, longitude, latitude, power, pulse, cadence, temperature)
}
strava_output <- function(data.gpx) {
strava_data <- strava_table_creator(data.gpx)
#plot(strava_data$hours, strava_data$elevation, type="l", lwd=3,
#        main= "Elevation vs Time", xlab = "Time in hours", ylab="Elevation")
#
#coordinates <- data.frame(strava_data$longitude, strava_data$latitude)
#plot(coordinates, type="l", lwd=3,
#        main = "Coordinates", xlab = "Longitude", ylab = "Latitude")
#
#scatter3D(strava_data$longitude, strava_data$latitude, strava_data$elevation,
#          theta=15, phi=0, bty="g", type="h")
#plotrgl()
}
strava_output("Morning_Ride_Kandel.gpx")
library("tidyverse")
strava_output("Morning_Ride_Kandel.gpx")
par(mar=c(5,4,4,4))
par(mar=c(5,4,4,4))
#library("tidyverse")
library("plyr")
strava_output("Morning_Ride_Kandel.gpx")
library("dplyr")
strava_output("Morning_Ride_Kandel.gpx")
?dplyr
library("zoo")
strava_output("Morning_Ride_Kandel.gpx")
plot(strava_data$hours, strava_data$elevation, type="l", lwd=3,
main= "Elevation vs Time", xlab = "Time in hours", ylab="Elevation")
strava_output <- function(data.gpx) {
strava_data <- strava_table_creator(data.gpx)
return(strava_data)
#plot(strava_data$hours, strava_data$elevation, type="l", lwd=3,
#        main= "Elevation vs Time", xlab = "Time in hours", ylab="Elevation")
#
#coordinates <- data.frame(strava_data$longitude, strava_data$latitude)
#plot(coordinates, type="l", lwd=3,
#        main = "Coordinates", xlab = "Longitude", ylab = "Latitude")
#
#scatter3D(strava_data$longitude, strava_data$latitude, strava_data$elevation,
#          theta=15, phi=0, bty="g", type="h")
#plotrgl()
}
strava_output("Morning_Ride_Kandel.gpx")
strava_data <- strava_output("Morning_Ride_Kandel.gpx")
plot(strava_data$hours, strava_data$elevation, type="l", lwd=3,
main= "Elevation vs Time", xlab = "Time in hours", ylab="Elevation")
y = ggmap(StravaMap) +
geom_point(data=strava_data, aes(longitude, latitude, colour=elevation),
size = 1) +
scale_color_gradient2(low = "yellow", high = "black", mid = "red", midpoint=500)
y
ggplotly(y)
library("ggplotly")
#PACKAGES
library("ggplot2")
ggplotly(y)
library("plotly")
ggplotly(y)
strava_data <- strava_output("Schauinsland_Fourways.gpx")
plot(strava_data$hours, strava_data$elevation, type="l", lwd=3,
main= "Elevation vs Time", xlab = "Time in hours", ylab="Elevation")
View(strava_data)
mean(strava_data$longitude)
StravaMap <- get_googlemap(center = c(mean(strava_data$longitude), mean(strava_data$latitude)),
zoom =11)
y = ggmap(StravaMap) +
geom_point(data=strava_data, aes(longitude, latitude, colour=elevation),
size = 1) +
scale_color_gradient2(low = "yellow", high = "black", mid = "red", midpoint=500)
y
ggplotly(y)
ggplot(data = strava_data) +
geom_path(mapping = aes(x = hours, y = elevation), colour = "blue")
ggplot(data = strava_data) +
geom_path(mapping = aes(x = hours, y = elevation), colour = "black", size=2)
ggplot(data = strava_data) +
geom_path(mapping = aes(x = hours, y = elevation), colour = "black", size=2) +
theme_light()
ggplot(data = strava_data) +
geom_path(mapping = aes(x = hours, y = elevation), colour = "black", size=2) +
theme_dark()
ggplot(data = strava_data) +
geom_path(mapping = aes(x = hours, y = elevation), colour = "black", size=2) +
theme_grey()
ggplot(data = strava_data) +
geom_path(mapping = aes(x = hours, y = elevation), colour = "black", size=2) +
theme_minimal()
install.packages("TinyTeX")
install.packages("tinytex")
library("tinytex")
install.packages("pdfLaTeX")
